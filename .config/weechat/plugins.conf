#
# weechat -- plugins.conf
#
# WARNING: It is NOT recommended to edit this file by hand,
# especially if WeeChat is running.
#
# Use commands like /set or /fset to change settings in WeeChat.
#
# For more info, see: https://weechat.org/doc/quickstart/
#

[var]
perl.buddylist.buddy.on.server = "on"
perl.buddylist.buddy.on.server.color = "lightgreen"
perl.buddylist.buddylist = "%h/buddylist.txt"
perl.buddylist.callback.timeout = "240"
perl.buddylist.check.buddies = "30"
perl.buddylist.color.away = "cyan"
perl.buddylist.color.default = "default"
perl.buddylist.color.number = "lightred"
perl.buddylist.color.offline = "243"
perl.buddylist.color.online = "yellow"
perl.buddylist.color.server = "white"
perl.buddylist.color.server.offline = "hide"
perl.buddylist.display.original.nick = "off"
perl.buddylist.display.social.net = "off"
perl.buddylist.display.social.net.color = "yellow"
perl.buddylist.hide.bar = "always"
perl.buddylist.hide.buddy.if.offline = "off"
perl.buddylist.hide.server.if.buddies.offline = "off"
perl.buddylist.hide.servername.in.buddylist = "off"
perl.buddylist.show.query = "on"
perl.buddylist.sort = "default"
perl.buddylist.text.away = ""
perl.buddylist.text.color = "white"
perl.buddylist.text.offline = ""
perl.buddylist.text.online = ""
perl.buddylist.use.redirection = "on"
perl.colorize_lines.alternate_color = ""
perl.colorize_lines.blacklist_buffers = ""
perl.colorize_lines.buffers = "all"
perl.colorize_lines.custom_action_text = ""
perl.colorize_lines.highlight = "on"
perl.colorize_lines.highlight_words = "off"
perl.colorize_lines.highlight_words_color = "black,darkgray"
perl.colorize_lines.ignore_tags = "irc_ctcp"
perl.colorize_lines.lines = "on"
perl.colorize_lines.nicks = ""
perl.colorize_lines.own_lines = "on"
perl.colorize_lines.own_lines_color = ""
perl.colorize_lines.tags = "irc_privmsg"
perl.highmon.alignment = "channel"
perl.highmon.away_only = "on"
perl.highmon.color_buf = "on"
perl.highmon.first_run = "true"
perl.highmon.hotlist_show = "on"
perl.highmon.logging = "off"
perl.highmon.merge_private = "off"
perl.highmon.nick_prefix = "<"
perl.highmon.nick_suffix = ">"
perl.highmon.output = "buffer"
perl.highmon.short_names = "off"
perl.highmon.snoonet.#eggbean = "on"
perl.newsbar.away_only = "off"
perl.newsbar.bar_auto_hide = "on"
perl.newsbar.bar_hidden_on_start = "1"
perl.newsbar.bar_name = "newsbar"
perl.newsbar.bar_seperator = "off"
perl.newsbar.bar_title = "Highlights"
perl.newsbar.bar_visible_lines = "4"
perl.newsbar.beep_cmd = "beep -f %F -l %L"
perl.newsbar.beep_duration = "20"
perl.newsbar.beep_freq_channel = "1000"
perl.newsbar.beep_freq_msg = "1000"
perl.newsbar.beep_freq_private = "1000"
perl.newsbar.beep_remote = "off"
perl.newsbar.beeps = "off"
perl.newsbar.blacklist_buffers = ""
perl.newsbar.color_info_msg_tag = "cyan"
perl.newsbar.color_privmsg_tag = "red"
perl.newsbar.color_server_msg_tag = "magenta"
perl.newsbar.color_status_name = "white"
perl.newsbar.color_status_number = "yellow"
perl.newsbar.colored_help = "on"
perl.newsbar.debug = "on"
perl.newsbar.format_private = "%N@%s"
perl.newsbar.format_public = "%N.%C@%s"
perl.newsbar.highlights_current_channel = "off"
perl.newsbar.memo_tag_color = "yellow"
perl.newsbar.most_recent = "first"
perl.newsbar.nick_flood_max_nicks = "4"
perl.newsbar.nick_flood_protection = "off"
perl.newsbar.remove_bar_on_unload = "on"
perl.newsbar.show_highlights = "on"
perl.newsbar.show_priv_msg = "on"
perl.newsbar.show_priv_server_msg = "on"
perl.newsbar.ssh_host = ""
perl.newsbar.ssh_key = ""
perl.notifym.channel_whitelist = ".*"
perl.notifym.notify_channels = "off"
perl.notifym.notify_mentions = "on"
perl.notifym.notify_pv = "on"
perl.notifym.notify_servers = "off"
perl.notifym.server_whitelist = ".*"
perl.pushover.blacklist = ""
perl.pushover.enabled = "on"
perl.pushover.only_if_away = "off"
perl.pushover.only_if_inactive = "off"
perl.pushover.priority = ""
perl.pushover.rate_limit = "0"
perl.pushover.redact_priv_msg = "off"
perl.pushover.short_name = "off"
perl.pushover.show_highlights = "on"
perl.pushover.show_priv_msg = "on"
perl.pushover.sound = ""
perl.pushover.token = "ajEX9RWhxs6NgeXFJxSK2jmpY54C9S"
perl.pushover.user = ""
perl.pushover.verbose = "1"
perl.query_blocker.auto_message = "I'm using a query blocking script, please wait while i whitelist you!"
perl.query_blocker.auto_message_prefix = "Auto-Message: "
perl.query_blocker.block_queries = "off"
perl.query_blocker.hotlist_show = "off"
perl.query_blocker.ignore_auto_message = "qb-ignore_auto_message.txt"
perl.query_blocker.logger = "off"
perl.query_blocker.msgbuffer = "server"
perl.query_blocker.open_on_startup = "off"
perl.query_blocker.quiet = "off"
perl.query_blocker.show_deny_message = "off"
perl.query_blocker.show_first_message_only = "on"
perl.query_blocker.show_hint = "on"
perl.query_blocker.show_nick_only = "off"
perl.query_blocker.temporary_mode = "off"
perl.query_blocker.whitelist = "/weechat/.weechat/qb-whitelist.txt"
perl.spell_menu.complete_near = "off"
perl.spell_menu.complete_noend = "off"
perl.spell_menu.no_complete = "off"
python.auto_away.idletime = "3"
python.auto_away.message = "Detached"
python.autojoin.autosave = "on"
python.autojoinem.sorted = "off"
python.chancomp.compare_only_on_command = "off"
python.chancomp.ignored_servers = ""
python.chancomp.output_priority = "shared"
python.chancomp.sorting = "none"
python.chancomp.verbose_output = "on"
python.go.auto_jump = "off"
python.go.buffer_number = "on"
python.go.color_name = "black,cyan"
python.go.color_name_highlight = "red,cyan"
python.go.color_name_highlight_selected = "red,brown"
python.go.color_name_selected = "black,brown"
python.go.color_number = "yellow,magenta"
python.go.color_number_selected = "yellow,red"
python.go.fuzzy_search = "off"
python.go.message = "Go to: "
python.go.short_name = "off"
python.go.short_name_server = "off"
python.go.sort = "number,beginning"
python.go.use_core_instead_weechat = "off"
python.grep.clear_buffer = "off"
python.grep.default_tail_head = "10"
python.grep.go_to_buffer = "on"
python.grep.log_filter = ""
python.grep.max_lines = "4000"
python.grep.show_summary = "on"
python.grep.size_limit = "2048"
python.grep.timeout_secs = "300"
python.grep_filter.bar_item = "grep"
python.grep_filter.enable = "off"
python.listbuffer.autofocus = "on"
python.listbuffer.channel_min_width = "25"
python.listbuffer.modes_min_width = "8"
python.listbuffer.sort_inverted = "on"
python.listbuffer.sort_order = "users"
python.listbuffer.users_min_width = "8"
python.pyrnotify.host = "localhost"
python.pyrnotify.icon = "utilities-terminal"
python.pyrnotify.pm-icon = "emblem-favorite"
python.pyrnotify.port = "4321"
python.spell_correction.auto_pop_up_item = "off"
python.spell_correction.auto_replace = "on"
python.spell_correction.catch_input_completion = "on"
python.spell_correction.complete_near = "0"
python.spell_correction.eat_input_char = "on"
python.spell_correction.hide_single_dict = "on"
python.spell_correction.replace_mode = "off"
python.spell_correction.suggest_item = "${white}%S${default}"
python.text_item.interval = "0"
python.undernet_totp.debug = "off"
python.undernet_totp.otp_server_names = ",undernet"
python.unwanted_msg.left_delimiter = "["
python.unwanted_msg.regexp = " +/"
python.unwanted_msg.right_delimiter = "]"
python.unwanted_msg.warning_buffer = "current"
python.update_notifier.color_countdown = "red"
python.update_notifier.color_default = "default"
python.update_notifier.git_compile_location = ""
python.update_notifier.git_pull = "false"
python.update_notifier.next_stable_text = "%d day(s) left to version %s"
python.update_notifier.start_countdown = "10"
python.update_notifier.start_counting = "30"
python.update_notifier.update_text = "New devel version available"
python.update_notifier.update_text_stable = "New stable version %s available"
python.update_notifier.uses_devel = "false"
python.update_notifier.uses_git = "false"
python.vimode.copy_clipboard_cmd = "xclip -selection c"
python.vimode.imap_esc = ""
python.vimode.imap_esc_timeout = "1000"
python.vimode.line_number_prefix = ""
python.vimode.line_number_suffix = " "
python.vimode.mode_indicator_cmd_color = "white"
python.vimode.mode_indicator_cmd_color_bg = "cyan"
python.vimode.mode_indicator_insert_color = "white"
python.vimode.mode_indicator_insert_color_bg = "blue"
python.vimode.mode_indicator_normal_color = "white"
python.vimode.mode_indicator_normal_color_bg = "gray"
python.vimode.mode_indicator_prefix = ""
python.vimode.mode_indicator_replace_color = "white"
python.vimode.mode_indicator_replace_color_bg = "red"
python.vimode.mode_indicator_search_color = "white"
python.vimode.mode_indicator_search_color_bg = "magenta"
python.vimode.mode_indicator_suffix = ""
python.vimode.no_warn = "off"
python.vimode.paste_clipboard_cmd = "xclip -selection c -o"
python.vimode.search_vim = "off"
python.vimode.user_mappings = ""
python.weepushover.away_only = "1"
python.weepushover.debug = "0"
python.weepushover.ignored_channels = ""
python.weepushover.inactive_only = "0"
python.weepushover.min_notify_interval = "60"
python.weepushover.subscribed_channels = ""
python.whois_on_query.command = "/whois $nick"
python.whois_on_query.self_query = "off"
tcl.chan_hl.default_list = ""
tcl.chan_hl.hl_on_cur_chan = "0"

[desc]
perl.buddylist.buddy.on.server = "show buddy who is connected to a server, but not visiting the same channel(s) (default: on)"
perl.buddylist.buddy.on.server.color = "color for online buddy but not visiting the same channel(s) (default: lightgreen)"
perl.buddylist.buddylist = "path/file-name to store your buddies. "%h" will be replaced by WeeChat config directory"
perl.buddylist.callback.timeout = "time in seconds to wait for answer from server. (default: 60)"
perl.buddylist.check.buddies = "time in seconds to send a /whois request to server. Be careful not to flood server (default: 20)"
perl.buddylist.color.away = "color for away buddies"
perl.buddylist.color.default = "fall back color. (default: standard weechat color)"
perl.buddylist.color.number = "color for channel number (default: lightred). If empty, channel list option is off"
perl.buddylist.color.offline = "color for offline buddies"
perl.buddylist.color.online = "color for online buddies"
perl.buddylist.color.server = "color for servername"
perl.buddylist.color.server.offline = "color for disconnected server (default: hide)"
perl.buddylist.display.original.nick = "display original nickname even if buddy changed his /nick (you have to add new nick to buddylist (default: off)"
perl.buddylist.display.social.net = "using bitlbee, buddies will be sorted in sublists with social-network name (eg. msn/jabber/facebook)(default: on)"
perl.buddylist.display.social.net.color = "color for social-network name (default: yellow)"
perl.buddylist.hide.bar = "hides buddylist bar when all servers with added buddies are offline (on = default, always = buddylist bar will be hidden (for example if you want to add item 'buddylist' to 'weechat.bar.status.items', off = buddylist bar will not be hidden))"
perl.buddylist.hide.buddy.if.offline = "hide buddy if offline (default: off)"
perl.buddylist.hide.server.if.buddies.offline = "hides server when all buddies are offline for this server (default: off)"
perl.buddylist.hide.servername.in.buddylist = "hide the servername in buddylist. If "on" only nicks will be displayed in buddylist (default: off)"
perl.buddylist.show.query = "displays a query buffer in front of the channel list"
perl.buddylist.sort = "sort method for buddylist (default = buddylist will be sort by nickname, status = buddylist will be sort by status (online, away, offline))"
perl.buddylist.text.away = "optional away text in buddylist (sort method has to be 'status')"
perl.buddylist.text.color = "color for optional online/away/offline-text in buddylist (default: white)"
perl.buddylist.text.offline = "optional offline text in buddylist (sort method has to be 'status')"
perl.buddylist.text.online = "optional online text in buddylist (sort method has to be 'status')"
perl.buddylist.use.redirection = "using redirection to get status of buddies (needs weechat >=0.3.4) (default: on)"
perl.colorize_lines.alternate_color = "alternate between two colors for messages (format: fg,bg:fg,bg)"
perl.colorize_lines.blacklist_buffers = "Comma-separated list of channels to be ignored (e.g. freenode.#weechat,*.#python)"
perl.colorize_lines.buffers = "Buffer type affected by the script (all/channel/query, default: all)"
perl.colorize_lines.custom_action_text = "customise the text attributes of ACTION message (note: content is evaluated, see /help eval)"
perl.colorize_lines.highlight = "Apply highlight color to the highlighted lines (off/on/nicks). The latter will limit highlighting to nicknames in option 'nicks'. Options 'weechat.color.chat_highlight' and 'weechat.color.chat_highlight_bg' will be used as colors."
perl.colorize_lines.highlight_words = "highlight word(s) in text, matching word(s) in weechat.look.highlight"
perl.colorize_lines.highlight_words_color = "color for highlight word in text (format: fg,bg)"
perl.colorize_lines.ignore_tags = "Comma-separated list of tags to ignore (see /debug tags)"
perl.colorize_lines.lines = "Apply nickname color to the lines (off/on/nicks). The latter will limit highlighting to nicknames in option 'nicks'. You can use a localvar to color all lines with a given color (eg: /buffer set localvar_set_colorize_lines *yellow). You'll have enable this option to use alternate_color."
perl.colorize_lines.nicks = "Comma-separater list of nicks (e.g. freenode.cat,*.dog) OR file name starting with '/' (e.g. /file.txt). In the latter case, nicknames will get loaded from that file inside weechat folder (e.g. from ~/.weechat/file.txt). Nicknames in file are newline-separated (e.g. freenode.dog\n*.cat)"
perl.colorize_lines.own_lines = "Apply nickname color to own lines (off/on/only). The latter turns off all other kinds of coloring altogether. This option has an higher priority than alternate_color option."
perl.colorize_lines.own_lines_color = "this color will be used for own messages. Set an empty value to use weechat.color.chat_nick_self option"
perl.colorize_lines.tags = "Comma-separated list of tags to accept (see /debug tags)"
perl.menu.active_help = "this setting is documented for completeness, it reflects if the help bar is visible and can be toggled from within the menu with Ctrl+H."
perl.menu.key_binding_hidden = "if set to on, the friendly reminder how to open the main menu (by default: /menu to open menu) will be removed from view. useful for those people bothered by it."
perl.menu.main_menu_hidden = "if set to on, the main menu bar will be always hidden. useful if you don't care about clicking on the main menu and want to save one line on your screen (due to internal reasons, the setting weechat.bar.main_menu.hidden does not work reliably, use this instead.)"
perl.menu.sticky_menu = "if this is set to on, a submenu is not closed when the entry is confirmed but has to be closed manually using Ctrl+X."
perl.notifym.channel_whitelist = "Channel white-list. (perl regex required) (default: ".*")"
perl.notifym.notify_channels = "Notify all messages from whitelisted channels. (default: "off")"
perl.notifym.notify_mentions = "Notify on mention in all channel. (default: "on")"
perl.notifym.notify_pv = "Notify on private message. (default: "on")"
perl.notifym.notify_servers = "Notify all messages from whitelisted servers. (default: "off")"
perl.notifym.server_whitelist = "Server white-list. (perl regex required) (default: ".*")"
perl.pushover.blacklist = "Comma separated list of buffers (full name) to blacklist for notifications (wildcard "*" is allowed, name beginning with "!" is excluded) (default: "")"
perl.pushover.enabled = "Turn script on or off (default: "on")"
perl.pushover.only_if_away = "Notify only if away status is active (default: "off")"
perl.pushover.only_if_inactive = "Notify only if buffer is not the active (current) buffer (default: "off")"
perl.pushover.priority = "priority (empty for default) (default: "")"
perl.pushover.rate_limit = "Rate limit in seconds (0 = unlimited), will send a maximum of 1 notification per time limit (default: "0")"
perl.pushover.redact_priv_msg = "When receiving private message notifications, hide the actual message text (default: "off")"
perl.pushover.short_name = "Use short buffer name in notification (default: "off")"
perl.pushover.show_highlights = "Notify on highlights (default: "on")"
perl.pushover.show_priv_msg = "Notify on private messages (default: "on")"
perl.pushover.sound = "Sound (empty for default) (default: "")"
perl.pushover.token = "pushover API token/key (You may feel free to use your own token, so you get your own monthly quota of messages without being affected by other users. See also: https://pushover.net/faq#overview-distribution ) (default: "ajEX9RWhxs6NgeXFJxSK2jmpY54C9S")"
perl.pushover.user = "pushover user key (default: "")"
perl.pushover.verbose = "Verbosity level (0 = silently ignore any errors, 1 = display brief error, 2 = display full server response) (default: "1")"
perl.query_blocker.auto_message = "messages to inform user that you don't like to get private messages without asking first. '%N' will be replaced with users nick (note: content is evaluated, see /help eval)."
perl.query_blocker.auto_message_prefix = "Prefix for auto message, may not be empty! (note: content is evaluated, see /help eval)"
perl.query_blocker.block_queries = "to enable or disable query_blocker (default: 'off')"
perl.query_blocker.hotlist_show = "query_blocker buffer appear in hotlists (status bar/buflist) (default: 'off')"
perl.query_blocker.ignore_auto_message = "path/file-name to store/read nicks to not send an auto message (default: qb-ignore_auto_message.txt)"
perl.query_blocker.logger = "logger status for query_blocker buffer (default: 'off')"
perl.query_blocker.msgbuffer = "buffer used to display query_blocker messages (current = current buffer, private = private buffer, weechat = weechat core buffer, server = server buffer, buffer = query_blocker buffer, highmon = highmon buffer, newsbar = newsbar-bar)"
perl.query_blocker.open_on_startup = "open query_blocker buffer on startup. option msgbuffer has to be set to 'buffer' (default: 'off')"
perl.query_blocker.quiet = "will send auto reply about blocking, but don't send any notice to you. (default: 'off')"
perl.query_blocker.show_deny_message = "show you the deny message, sent to user. (default: 'off')"
perl.query_blocker.show_first_message_only = "Show only first message sent by blocked queries (default: 'on')"
perl.query_blocker.show_hint = "show hint how to allow queries for nick. (default: 'on')"
perl.query_blocker.show_nick_only = "only show nick and server. (default: 'off')"
perl.query_blocker.temporary_mode = "if 'on' you have to manually add a nick to whitelist. otherwise a conversation will be temporary only and after closing query buffer the nick will be discard (default: 'off')"
perl.query_blocker.whitelist = "path/file-name to store/read nicks not to be blocked (default: qb-whitelist.txt)"
perl.spell_menu.complete_near = "only use tab complete to open the menu if the cursor is next to the wrong word"
perl.spell_menu.complete_noend = "don't spell correct with tab if exactly at the end of a word"
perl.spell_menu.no_complete = "don't open the spell menu on tab completion. make a binding yourself to call /spell_menu, for example"
python.autojoinem.sorted = "channels will be sorted in autojoin-option. if autojoin-option contains channel-keys, this option will be ignored. (default: "off")"
python.chancomp.compare_only_on_command = "Specifically require chancomp for comparisons?"
python.chancomp.ignored_servers = "Servers to ignore comparisons with, comma separated."
python.chancomp.output_priority = "How to display output? smart, shared, not_shared"
python.chancomp.sorting = "Ensure sorting shared channel WHOIS output? none, alpha, alpha_ignore_case"
python.chancomp.verbose_output = "Also show output when all or none channels are shared"
python.go.auto_jump = "automatically jump to buffer when it is uniquely selected (default: "off")"
python.go.buffer_number = "display buffer number (default: "on")"
python.go.color_name = "color for buffer name (not selected) (default: "black,cyan")"
python.go.color_name_highlight = "color for highlight in buffer name (not selected) (default: "red,cyan")"
python.go.color_name_highlight_selected = "color for highlight in a selected buffer name (default: "red,brown")"
python.go.color_name_selected = "color for a selected buffer name (default: "black,brown")"
python.go.color_number = "color for buffer number (not selected) (default: "yellow,magenta")"
python.go.color_number_selected = "color for selected buffer number (default: "yellow,red")"
python.go.fuzzy_search = "search buffer matches using approximation (default: "off")"
python.go.message = "message to display before list of buffers (default: "Go to: ")"
python.go.short_name = "display and search in short names instead of buffer name (default: "off")"
python.go.short_name_server = "prefix short names with server names for search and display (default: "off")"
python.go.sort = "comma-separated list of keys to sort buffers (the order is important, sorts are performed in the given order): name = sort by name (or short name),  (default: "number,beginning")"
python.go.use_core_instead_weechat = "use name "core" instead of "weechat" for core buffer (default: "off")"
python.grep_filter.bar_item = "text to show in bar item when filtering (default: "grep")"
python.grep_filter.enable = "enable automatically start filtering when searching (default: "off")"
python.listbuffer.autofocus = "Focus the listbuffer in the current window if it isn't already displayed by a window."
python.listbuffer.channel_min_width = "The minimum width used for the channel name in the channel list. If a channelname is shorter than this amount, the column will be padded with spaces."
python.listbuffer.modes_min_width = "The minimum width used for modes in the channel list. If a channel has less modes than this amount, the column will be padded with spaces."
python.listbuffer.sort_inverted = "Invert the sort order for the channel list."
python.listbuffer.sort_order = "Last used sort order for the channel list."
python.listbuffer.users_min_width = "The minimum width used for the usercount in the channel list. If the usercount has less digits than this amount, the column will be padded with spaces."
python.spell_correction.auto_pop_up_item = "automatic pop-up suggestion item on a misspelled word (default: "off")"
python.spell_correction.auto_replace = "replaces misspelled word with selected suggestion, automatically. If you use "off" you will have to bind command "/spell_correction replace" to a key (default: "on")"
python.spell_correction.catch_input_completion = "will catch the input_complete commands [TAB-key] (default: "on")"
python.spell_correction.complete_near = "show suggestions item only if you are n-chars near the misspelled word (0 = off). Using 'replace_mode' cursor has to be n-chars near misspelled word to cycle through suggestions. (default: "0")"
python.spell_correction.eat_input_char = "will eat the next char you type, after replacing a misspelled word (default: "on")"
python.spell_correction.hide_single_dict = "will hide dict in item if you have a single dict for buffer only (default: "on")"
python.spell_correction.replace_mode = "misspelled word will be replaced directly by suggestions. Use option 'complete_near' to specify range and item 'spell_suggestion' to show possible suggestions. (default: "off")"
python.spell_correction.suggest_item = "item format (%S = suggestion, %D = dict). Colors are allowed with format "${color}". note: since WeeChat 0.4.2 content is evaluated, see /help eval. (default: "${white}%S${default}")"
python.text_item.interval = "How often (in seconds) to force an update of all items. 0 means deactivated"
python.undernet_totp.debug = "Debug output (default: off)"
python.undernet_totp.otp_server_names = "List of undernet server for which to enable OTP, use comma as separator (default: )"
python.vimode.copy_clipboard_cmd = "command used to copy to clipboard; must read input from stdin (default: "xclip -selection c")"
python.vimode.imap_esc = "use alternate mapping to enter Normal mode while in Insert mode; having it set to 'jk' is similar to `:imap jk <Esc>` in vim (default: "")"
python.vimode.imap_esc_timeout = "time in ms to wait for the imap_esc sequence to complete (default: "1000")"
python.vimode.line_number_prefix = "prefix for line numbers (default: "")"
python.vimode.line_number_suffix = "suffix for line numbers (default: " ")"
python.vimode.mode_indicator_cmd_color = "color for mode indicator in Command mode (default: "white")"
python.vimode.mode_indicator_cmd_color_bg = "background color for mode indicator in Command mode (default: "cyan")"
python.vimode.mode_indicator_insert_color = "color for mode indicator in Insert mode (default: "white")"
python.vimode.mode_indicator_insert_color_bg = "background color for mode indicator in Insert mode (default: "blue")"
python.vimode.mode_indicator_normal_color = "color for mode indicator in Normal mode (default: "white")"
python.vimode.mode_indicator_normal_color_bg = "background color for mode indicator in Normal mode (default: "gray")"
python.vimode.mode_indicator_prefix = "prefix for the bar item mode_indicator (default: "")"
python.vimode.mode_indicator_replace_color = "color for mode indicator in Replace mode (default: "white")"
python.vimode.mode_indicator_replace_color_bg = "background color for mode indicator in Replace mode (default: "red")"
python.vimode.mode_indicator_search_color = "color for mode indicator in Search mode (default: "white")"
python.vimode.mode_indicator_search_color_bg = "background color for mode indicator in Search mode (default: "magenta")"
python.vimode.mode_indicator_suffix = "suffix for the bar item mode_indicator (default: "")"
python.vimode.no_warn = "don't warn about problematic keybindings and tmux/screen (default: "off")"
python.vimode.paste_clipboard_cmd = "command used to paste clipboard; must output content to stdout (default: "xclip -selection c -o")"
python.vimode.search_vim = "allow n/N usage after searching (requires an extra <Enter> to return to normal mode) (default: "off")"
python.vimode.user_mappings = "see the `:nmap` command in the README for more info; please do not modify this field manually unless you know what you're doing (default: "")"
python.whois_on_query.command = "the command sent to do the whois ($nick is replaced by nick) (default: "/whois $nick $nick")"
python.whois_on_query.self_query = "if on, send whois for self queries (default: "off")"
